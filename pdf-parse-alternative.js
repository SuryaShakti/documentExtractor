// Alternative: PDF text extraction + OpenAI\n// If Vision API has file size limits or other issues\n\nimport OpenAI from 'openai';\n// Install: npm install pdf-parse\nconst pdfParse = require('pdf-parse');\n\nconst openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY,\n});\n\nasync function extractWithPDFParse(documentUrl: string, columns: any[]): Promise<any[]> {\n  console.log(\"ðŸ“„ Using PDF-Parse + OpenAI Text approach\");\n  \n  // Fetch and parse PDF\n  const response = await fetch(documentUrl);\n  const arrayBuffer = await response.arrayBuffer();\n  const buffer = Buffer.from(arrayBuffer);\n  \n  // Extract text using pdf-parse\n  const data = await pdfParse(buffer);\n  const documentText = data.text;\n  \n  console.log('Extracted text length:', documentText.length);\n  console.log('First 300 chars:', documentText.substring(0, 300));\n  \n  const results = [];\n  \n  for (const column of columns) {\n    try {\n      const completion = await openai.chat.completions.create({\n        model: \"gpt-4o\",\n        messages: [\n          {\n            role: \"system\",\n            content: \"You are a professional document data extraction AI. Extract specific information from document text with high accuracy. Always respond with valid JSON format.\"\n          },\n          {\n            role: \"user\",\n            content: `Document Text:\\n${documentText}\\n\\nExtract: ${column.prompt}\\n\\nField: ${column.name}\\nType: ${column.type}\\n\\nReturn JSON: {\"value\": \"extracted_data\", \"confidence\": 0.95}`\n          }\n        ],\n        temperature: 0.1,\n        max_tokens: 500,\n        response_format: { type: \"json_object\" }\n      });\n\n      const response = completion.choices[0].message.content;\n      const parsedResponse = JSON.parse(response || '{\"value\":\"\",\"confidence\":0}');\n      \n      results.push({\n        columnId: column.id,\n        value: parsedResponse.value || \"\",\n        confidence: Math.min(Math.max(parsedResponse.confidence || 0, 0), 1),\n        extractedBy: {\n          method: \"ai\",\n          model: \"gpt-4o\",\n          version: \"pdf-parse-text-1.0\",\n        },\n      });\n\n    } catch (error) {\n      console.error(`Failed to extract ${column.name}:`, error);\n      results.push({\n        columnId: column.id,\n        value: \"\",\n        confidence: 0,\n        extractedBy: {\n          method: \"ai\",\n          model: \"gpt-4o\",\n          version: \"pdf-parse-text-1.0\",\n        },\n      });\n    }\n  }\n\n  return results;\n}\n\n// Usage: Replace the extractDataDirectlyFromPDF function with this\n// if Vision API has file size limits\n